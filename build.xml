<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE project>
<project name="RouterLogger" default="all" xmlns:jacoco="antlib:org.jacoco.ant">

	<property environment="env" />
	<property name="env.JRE6_HOME" value="${env.JAVA_HOME}/../jdk1.6.0_45/jre" />

	<property file="build.properties" />
	<property file="${build.resourcesDirectory}/version.properties" />

	<target name="clean">
		 
	</target>

	<target name="distclean">
		 
	</target>

	<target name="compile">
		 
	</target>

	<target name="resources">

	</target>

	<target name="lib">
		<fileset id="lib" dir="${dependencies.directory}">
			<include name="*.jar" />
			<include name="license/*.txt" />
		</fileset>

		<!-- Copy dependencies -->
		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}/lib">
			<fileset refid="lib" />
			<fileset dir="${dependencies.directory}/platform/win32-win32-x86">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}/lib">
			<fileset refid="lib" />
			<fileset dir="${dependencies.directory}/platform/win32-win32-x86_64">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}/lib">
			<fileset refid="lib" />
			<fileset dir="${dependencies.directory}/platform/gtk-linux-x86">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}/lib">
			<fileset refid="lib" />
			<fileset dir="${dependencies.directory}/platform/gtk-linux-x86_64">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}/lib">
			<fileset refid="lib" />
			<fileset dir="${dependencies.directory}/platform/gtk-linux-armhf">
				<include name="*.jar" />
			</fileset>
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}/lib">
			<fileset refid="lib" />
			<fileset dir="${dependencies.directory}/platform/cocoa-macosx-x86_64">
				<include name="*.jar" />
			</fileset>
		</copy>

		<!-- Prepare MANIFEST.MF files -->
		<manifestclasspath property="classpath.win32-win32-x86" jarfile="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}/${ant.project.name}.jar" maxParentLevels="0">
			<classpath>
				<fileset dir="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</manifestclasspath>
		<manifestclasspath property="classpath.win32-win32-x86_64" jarfile="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}/${ant.project.name}.jar" maxParentLevels="0">
			<classpath>
				<fileset dir="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</manifestclasspath>
		<manifestclasspath property="classpath.gtk-linux-x86" jarfile="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}/${artifactId}.jar" maxParentLevels="0">
			<classpath>
				<fileset dir="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</manifestclasspath>
		<manifestclasspath property="classpath.gtk-linux-x86_64" jarfile="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}/${artifactId}.jar" maxParentLevels="0">
			<classpath>
				<fileset dir="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</manifestclasspath>
		<manifestclasspath property="classpath.gtk-linux-armhf" jarfile="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}/${artifactId}.jar" maxParentLevels="0">
			<classpath>
				<fileset dir="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</manifestclasspath>
		<manifestclasspath property="classpath.cocoa-macosx-x86_64" jarfile="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}/${artifactId}.jar" maxParentLevels="0">
			<classpath>
				<fileset dir="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}/lib">
					<include name="*.jar" />
				</fileset>
			</classpath>
		</manifestclasspath>
	</target>

	<target name="config">
		<fileset id="config" dir="${build.configDirectory}" />

		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}" failonerror="false">
			<fileset refid="config" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}" failonerror="false">
			<fileset refid="config" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}" failonerror="false">
			<fileset refid="config" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}" failonerror="false">
			<fileset refid="config" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}" failonerror="false">
			<fileset refid="config" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}" failonerror="false">
			<fileset refid="config" />
		</copy>
	</target>

	<target name="scripts">
		<fileset id="bat" dir="${build.scriptSourceDirectory}">
			<include name="*.bat" />
		</fileset>
		<fileset id="sh" dir="${build.scriptSourceDirectory}">
			<include name="*.sh" />
		</fileset>
		<fileset id="command" dir="${build.scriptSourceDirectory}">
			<include name="*.command" />
		</fileset>

		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}" failonerror="false">
			<fileset refid="bat" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}" failonerror="false">
			<fileset refid="bat" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}" failonerror="false">
			<fileset refid="sh" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}" failonerror="false">
			<fileset refid="sh" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}" failonerror="false">
			<fileset refid="sh" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}" failonerror="false">
			<fileset refid="command" />
		</copy>
	</target>

	<fileset id="docs" dir="">
		<include name="README*" />
		<include name="LICENSE*" />
		<include name="NOTICE*" />
	</fileset>

	<target name="docs">
		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}">
			<fileset refid="docs" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}">
			<fileset refid="docs" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}">
			<fileset refid="docs" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}">
			<fileset refid="docs" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}">
			<fileset refid="docs" />
		</copy>
		<copy todir="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}">
			<fileset refid="docs" />
		</copy>
	</target>

	<target name="icons">
		<copy file="${icons.directory}/main.ico" tofile="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}/${artifactId}.icns" failonerror="false" />
		<copy file="${icons.directory}/main.ico" tofile="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}/${artifactId}.icns" failonerror="false" />
		<copy file="${icons.directory}/main.ico" tofile="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}/${artifactId}.icns" failonerror="false" />
		<copy file="${icons.directory}/main.icns" tofile="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}/${artifactId}.icns" failonerror="false" />
	</target>

	<target name="jar" depends="compile, resources, config, scripts, docs, icons, lib">
		<jar destfile="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}/${ant.project.name}.jar" basedir="${build.outputDirectory}" level="9">
			<manifest>
				<attribute name="Main-Class" value="${build.jar.archive.manifest.mainClass}" />
				<attribute name="Class-Path" value="${classpath.win32-win32-x86}" />
				<attribute name="Implementation-Title" value="${name}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="X-Compile-Source-JDK" value="${build.compiler.source}" />
				<attribute name="X-Compile-Target-JDK" value="${build.compiler.target}" />
			</manifest>
			<metainf refid="docs" />
		</jar>
		<jar destfile="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}/${ant.project.name}.jar" basedir="${build.outputDirectory}" level="9">
			<manifest>
				<attribute name="Main-Class" value="${build.jar.archive.manifest.mainClass}" />
				<attribute name="Class-Path" value="${classpath.win32-win32-x86_64}" />
				<attribute name="Implementation-Title" value="${name}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="X-Compile-Source-JDK" value="${build.compiler.source}" />
				<attribute name="X-Compile-Target-JDK" value="${build.compiler.target}" />
			</manifest>
			<metainf refid="docs" />
		</jar>
		<jar destfile="${build.assemblyDirectory}/dist/gtk-linux-x86/${artifactId}/${artifactId}.jar" basedir="${build.outputDirectory}" level="9">
			<manifest>
				<attribute name="Main-Class" value="${build.jar.archive.manifest.mainClass}" />
				<attribute name="Class-Path" value="${classpath.gtk-linux-x86}" />
				<attribute name="Implementation-Title" value="${name}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="X-Compile-Source-JDK" value="${build.compiler.source}" />
				<attribute name="X-Compile-Target-JDK" value="${build.compiler.target}" />
			</manifest>
			<metainf refid="docs" />
		</jar>
		<jar destfile="${build.assemblyDirectory}/dist/gtk-linux-x86_64/${artifactId}/${artifactId}.jar" basedir="${build.outputDirectory}" level="9">
			<manifest>
				<attribute name="Main-Class" value="${build.jar.archive.manifest.mainClass}" />
				<attribute name="Class-Path" value="${classpath.gtk-linux-x86_64}" />
				<attribute name="Implementation-Title" value="${name}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="X-Compile-Source-JDK" value="${build.compiler.source}" />
				<attribute name="X-Compile-Target-JDK" value="${build.compiler.target}" />
			</manifest>
			<metainf refid="docs" />
		</jar>
		<jar destfile="${build.assemblyDirectory}/dist/gtk-linux-armhf/${artifactId}/${artifactId}.jar" basedir="${build.outputDirectory}" level="9">
			<manifest>
				<attribute name="Main-Class" value="${build.jar.archive.manifest.mainClass}" />
				<attribute name="Class-Path" value="${classpath.gtk-linux-armhf}" />
				<attribute name="Implementation-Title" value="${name}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="X-Compile-Source-JDK" value="${build.compiler.source}" />
				<attribute name="X-Compile-Target-JDK" value="${build.compiler.target}" />
			</manifest>
			<metainf refid="docs" />
		</jar>
		<jar destfile="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}/${artifactId}.jar" basedir="${build.outputDirectory}" level="9">
			<manifest>
				<attribute name="Main-Class" value="${build.jar.archive.manifest.mainClass}" />
				<attribute name="Class-Path" value="${classpath.cocoa-macosx-x86_64}" />
				<attribute name="Implementation-Title" value="${name}" />
				<attribute name="Implementation-Version" value="${project.version}" />
				<attribute name="X-Compile-Source-JDK" value="${build.compiler.source}" />
				<attribute name="X-Compile-Target-JDK" value="${build.compiler.target}" />
			</manifest>
			<metainf refid="docs" />
		</jar>
	</target>

	<target name="dist-macos" depends="jar">
		<taskdef name="jarbundler" classname="com.ultramixer.jarbundler.JarBundler" classpath="${jarbundler.dir}/jarbundler-core-3.3.0.jar" />
		<mkdir dir="${build.assemblyDirectory}/bundle/cocoa-macosx-x86_64" />
		<jarbundler vmoptions="${macosx.vmoptions}" dir="${build.assemblyDirectory}/bundle/cocoa-macosx-x86_64" name="${name}" mainclass="${build.jar.archive.manifest.mainClass}" startonmainthread="true" version="${project.version}" icon="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}/${artifactId}.icns" usejavaxkey="true" jvmversion="${build.compiler.target}+" stubfile="${jarbundler.dir}/JavaApplicationStub" highresolutioncapable="true">
			<jarfileset dir="${build.assemblyDirectory}/dist/cocoa-macosx-x86_64/${artifactId}" includes="**/*.jar" />
		</jarbundler>
		<copy todir="${build.assemblyDirectory}/bundle/cocoa-macosx-x86_64/${name}.app/Contents/Resources/Java" failonerror="false">
			<fileset refid="config" />
			<fileset refid="command" />
		</copy>
		<copy todir="${build.assemblyDirectory}/bundle/cocoa-macosx-x86_64/${name}.app/Contents/SharedSupport">
			<fileset refid="docs" />
		</copy>
		<tar destfile="${build.distDirectory}/${artifactId}-${project.version}-cocoa-macosx-x86_64-app.tar.gz" compression="gzip">
			<tarfileset dir="${build.assemblyDirectory}/bundle/cocoa-macosx-x86_64" filemode="755">
				<include name="${name}.app/Contents/MacOS/*" />
				<include name="${name}.app/Contents/Resources/Java/*.command" />
			</tarfileset>
			<tarfileset dir="${build.assemblyDirectory}/bundle/cocoa-macosx-x86_64">
				<include name="**" />
				<exclude name="${name}.app/Contents/MacOS/*" />
				<exclude name="${name}.app/Contents/Resources/Java/*.command" />
			</tarfileset>
		</tar>
	</target>

	<target name="dist-linux" depends="jar">
		<tar destfile="${build.distDirectory}/${artifactId}-${project.version}-gtk-linux-x86-bin.tar.gz" compression="gzip">
			<tarfileset dir="${build.assemblyDirectory}/dist/gtk-linux-x86" filemode="755">
				<include name="${artifactId}/*.jar" />
				<include name="${artifactId}/*.sh" />
			</tarfileset>
			<tarfileset dir="${build.assemblyDirectory}/dist/gtk-linux-x86">
				<include name="**" />
				<exclude name="${artifactId}/*.jar" />
				<exclude name="${artifactId}/*.sh" />
			</tarfileset>
		</tar>
		<tar destfile="${build.distDirectory}/${artifactId}-${project.version}-gtk-linux-x86_64-bin.tar.gz" compression="gzip">
			<tarfileset dir="${build.assemblyDirectory}/dist/gtk-linux-x86_64" filemode="755">
				<include name="${artifactId}/*.jar" />
				<include name="${artifactId}/*.sh" />
			</tarfileset>
			<tarfileset dir="${build.assemblyDirectory}/dist/gtk-linux-x86_64">
				<include name="**" />
				<exclude name="${artifactId}/*.jar" />
				<exclude name="${artifactId}/*.sh" />
			</tarfileset>
		</tar>
		<tar destfile="${build.distDirectory}/${artifactId}-${project.version}-gtk-linux-armhf-bin.tar.gz" compression="gzip">
			<tarfileset dir="${build.assemblyDirectory}/dist/gtk-linux-armhf" filemode="755">
				<include name="${artifactId}/*.jar" />
				<include name="${artifactId}/*.sh" />
			</tarfileset>
			<tarfileset dir="${build.assemblyDirectory}/dist/gtk-linux-armhf">
				<include name="**" />
				<exclude name="${artifactId}/*.jar" />
				<exclude name="${artifactId}/*.sh" />
			</tarfileset>
		</tar>
	</target>

	<target name="dist-windows" depends="jar">
		<taskdef name="launch4j" classname="net.sf.launch4j.ant.Launch4jTask" classpath="${launch4j.dir}/launch4j.jar:${launch4j.dir}/lib/xstream.jar" />
		<condition property="launch4j.bindir" value="${launch4j.dir}/mac" else="${launch4j.dir}/bin">
			<and>
				<os family="mac" />
				<available file="${launch4j.dir}/mac" type="dir" />
			</and>
		</condition>
		<chmod perm="+x" file="${launch4j.bindir}/ld" failonerror="false" failifexecutionfails="false" ignoremissing="true" />
		<chmod perm="+x" file="${launch4j.bindir}/windres" failonerror="false" failifexecutionfails="false" ignoremissing="true" />

		<launch4j bindir="${launch4j.bindir}">
			<config outfile="${build.assemblyDirectory}/dist/win32-win32-x86/${artifactId}/${ant.project.name}.exe" jarpath="${ant.project.name}.jar" headertype="${launch4j.headerType}" dontwrapjar="${launch4j.dontWrapJar}" stayalive="${launch4j.stayAlive}" restartoncrash="${launch4j.restartOnCrash}" priority="${launch4j.priority}" errtitle="${launch4j.errTitle}" chdir="." icon="${icons.directory}/main.ico">
				<singleInstance mutexname="${build.jar.archive.manifest.mainClass}" windowtitle="${name}" />
				<jre runtimebits="32" minversion="${build.compiler.target}.0" jdkpreference="${launch4j.jdkPreference}" initialheapsize="${vm.initialHeapSize}" maxheapsize="${vm.maxHeapSize}" />
				<classPath mainclass="${build.jar.archive.manifest.mainClass}" cp="lib/*" />
				<versionInfo fileversion="${project.version}.0" txtfileversion="${project.version}" filedescription="${name}" copyright="${name}" productversion="${project.version}.0" txtproductversion="${project.version}" productname="${name}" internalname="${ant.project.name}" originalfilename="${ant.project.name}.exe" />
			</config>
		</launch4j>
		<echo file="${build.assemblyDirectory}/dist/win32-win32-x86/setup.iss">
			[Setup]
			AppName=${name}
			AppVersion=${project.version}
			AppId=${innosetup.AppId.x86}
			AppPublisherURL=${innosetup.AppPublisherURL}
			AppSupportURL=${innosetup.AppSupportURL}
			AppUpdatesURL=${innosetup.AppUpdatesURL}
			DefaultDirName={pf}\${name}
			DefaultGroupName=${name}
			UninstallDisplayIcon={app}\${ant.project.name}.exe
			Compression=lzma2
			SolidCompression=yes
			ArchitecturesAllowed=x86
			CloseApplications=no

			[Languages]
			Name: "English"; MessagesFile: "compiler:Default.isl"; LicenseFile: "${artifactId}\LICENSE.txt"
			Name: "Italiano"; MessagesFile: "compiler:Languages\Italian.isl"; LicenseFile: "${artifactId}\LICENSE.txt"

			[InstallDelete]
			Type: files; Name: {app}\lib\*.jar

			[Run]
			Filename: "{app}\${ant.project.name}.exe"; Description: "{cm:LaunchProgram,${name}}"; Flags: nowait postinstall skipifsilent

			[Tasks]
			Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
			Name: "startupicon"; Description: "{cm:AutoStartProgram,${name}}"; GroupDescription: "{cm:AutoStartProgramGroupDescription}"; Flags: unchecked

			[Icons]
			Name: "{group}\${name}"; Filename: "{app}\${ant.project.name}.exe"
			Name: "{group}\{cm:UninstallProgram,${name}}"; Filename: "{uninstallexe}"
			Name: "{userdesktop}\${name}"; Filename: "{app}\${ant.project.name}.exe"; Tasks: desktopicon
			Name: "{commonstartup}\${name}"; Filename: "{app}\${ant.project.name}.exe"; Tasks: startupicon

			[Files]
			Source: "${artifactId}\*"; Excludes: "*.cfg"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
			Source: "${artifactId}\*.cfg"; DestDir: "{userappdata}\${name}"; Flags: onlyifdoesntexist
		</echo>

		<exec osfamily="windows" executable="${innosetup.dir}/ISCC.exe">
			<arg value="${build.assemblyDirectory}/dist/win32-win32-x86/setup.iss" />
			<arg value="/O${build.distDirectory}" />
			<arg value="/F${artifactId}-${project.version}-win32-win32-x86-setup" />
		</exec>
		<exec osfamily="unix" executable="wine">
			<arg value="${innosetup.dir}/ISCC.exe" />
			<arg value="${build.assemblyDirectory}/dist/win32-win32-x86/setup.iss" />
			<arg value="/O${build.distDirectory}" />
			<arg value="/F${artifactId}-${project.version}-win32-win32-x86-setup" />
		</exec>

		<launch4j bindir="${launch4j.bindir}">
			<config outfile="${build.assemblyDirectory}/dist/win32-win32-x86_64/${artifactId}/${ant.project.name}.exe" jarpath="${ant.project.name}.jar" headertype="${launch4j.headerType}" dontwrapjar="${launch4j.dontWrapJar}" stayalive="${launch4j.stayAlive}" restartoncrash="${launch4j.restartOnCrash}" priority="${launch4j.priority}" errtitle="${launch4j.errTitle}" chdir="." icon="${icons.directory}/main.ico">
				<singleInstance mutexname="${build.jar.archive.manifest.mainClass}" windowtitle="${name}" />
				<jre runtimebits="64" minversion="${build.compiler.target}.0" jdkpreference="${launch4j.jdkPreference}" initialheapsize="${vm.initialHeapSize}" maxheapsize="${vm.maxHeapSize}" />
				<classPath mainclass="${build.jar.archive.manifest.mainClass}" cp="lib/*" />
				<versionInfo fileversion="${project.version}.0" txtfileversion="${project.version}" filedescription="${name}" copyright="${name}" productversion="${project.version}.0" txtproductversion="${project.version}" productname="${name}" internalname="${ant.project.name}" originalfilename="${ant.project.name}.exe" />
			</config>
		</launch4j>
		<echo file="${build.assemblyDirectory}/dist/win32-win32-x86_64/setup.iss">
			[Setup]
			AppName=${name}
			AppVersion=${project.version}
			AppId=${innosetup.AppId.x64}
			AppPublisherURL=${innosetup.AppPublisherURL}
			AppSupportURL=${innosetup.AppSupportURL}
			AppUpdatesURL=${innosetup.AppUpdatesURL}
			DefaultDirName={pf}\${name}
			DefaultGroupName=${name}
			UninstallDisplayIcon={app}\${ant.project.name}.exe
			Compression=lzma2
			SolidCompression=yes
			ArchitecturesAllowed=x64
			ArchitecturesInstallIn64BitMode=x64
			CloseApplications=no

			[Languages]
			Name: "English"; MessagesFile: "compiler:Default.isl"; LicenseFile: "${artifactId}\LICENSE.txt"
			Name: "Italiano"; MessagesFile: "compiler:Languages\Italian.isl"; LicenseFile: "${artifactId}\LICENSE.txt"

			[InstallDelete]
			Type: files; Name: {app}\lib\*.jar

			[Run]
			Filename: "{app}\${ant.project.name}.exe"; Description: "{cm:LaunchProgram,${name}}"; Flags: nowait postinstall skipifsilent

			[Tasks]
			Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
			Name: "startupicon"; Description: "{cm:AutoStartProgram,${name}}"; GroupDescription: "{cm:AutoStartProgramGroupDescription}"; Flags: unchecked

			[Icons]
			Name: "{group}\${name}"; Filename: "{app}\${ant.project.name}.exe"
			Name: "{group}\{cm:UninstallProgram,${name}}"; Filename: "{uninstallexe}"
			Name: "{userdesktop}\${name}"; Filename: "{app}\${ant.project.name}.exe"; Tasks: desktopicon
			Name: "{commonstartup}\${name}"; Filename: "{app}\${ant.project.name}.exe"; Tasks: startupicon

			[Files]
			Source: "${artifactId}\*"; Excludes: "*.cfg"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs
			Source: "${artifactId}\*.cfg"; DestDir: "{userappdata}\${name}"; Flags: onlyifdoesntexist
		</echo>

		<exec osfamily="windows" executable="${innosetup.dir}/ISCC.exe">
			<arg value="${build.assemblyDirectory}/dist/win32-win32-x86_64/setup.iss" />
			<arg value="/O${build.distDirectory}" />
			<arg value="/F${artifactId}-${project.version}-win32-win32-x86_64-setup" />
		</exec>
		<exec osfamily="unix" executable="wine">
			<arg value="${innosetup.dir}/ISCC.exe" />
			<arg value="${build.assemblyDirectory}/dist/win32-win32-x86_64/setup.iss" />
			<arg value="/O${build.distDirectory}" />
			<arg value="/F${artifactId}-${project.version}-win32-win32-x86_64-setup" />
		</exec>
	</target>

	<target name="dist" depends="dist-linux, dist-macos, dist-windows" />

	<available file="${build.testSourceDirectory}" type="dir" property="build.test" />

	<target name="test" depends="jar" if="build.test">
	</target>

	<target name="sonar-main">
		 
	</target>

	<target name="sonar-test" depends="sonar-main" if="build.test">
		 
	</target>

	<target name="sonar" depends="sonar-main, sonar-test">
 	</target>

	<target name="all" depends="clean, dist, test, sonar" />

</project>
